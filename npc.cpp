/*******************************************************************************
* タイトル:		npcプログラム
* プログラム名:	npc.cpp
* 作成者:		GP11B132 05 王ウ華
* 作成日:		2022/07/07
*******************************************************************************/


/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "main.h"
#include "player.h"
#include "npc.h"
#include "map.h"
#include "npc.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/
NPC g_Npc[NPC_MAX];

// 初期化処理
void InitNpc(void) {
	for (int i = 0; i < NPC_MAX; i++) {
		g_Npc[i].y = 1 + (rand() % (MAINMAP_H - 10));
		g_Npc[i].x = 1 + (rand() % (MAINMAP_W - 10));

		g_Npc[i].N_collision = false;
	}
}

// 終了処理
void UninitNpc(void) {

}

// 更新処理
void UpdateNpc(void) {
	for (int i = 0; i < NPC_MAX; i++) {
		g_Npc[i].old_x = g_Npc[i].x;
		g_Npc[i].old_y = g_Npc[i].y;

		// Npc moving 
		int key = rand() % 4;

		switch (key) {
		case 0:
			g_Npc[i].x--;
			break;

		case 1:
			g_Npc[i].x++;
			break;

		case 2:
			g_Npc[i].y--;
			break;

		case 3:
			g_Npc[i].y++;
			break;

		default:
			break;
		}

		// map range check
		int answer = CheckMap(g_Npc[i].y, g_Npc[i].x);
		switch (answer) {
		case 1:
			g_Npc[i].y = g_Npc[i].old_y;
			g_Npc[i].x = g_Npc[i].old_x;
			break;

		default:
			break;
		}
	}
}

void DrawNpc(void) {
	for (int i = 0; i < NPC_MAX; i++) {
		SetMap(g_Npc[i].y, g_Npc[i].x, 'N');
	}
}

NPC* GetNpc(void) {
	for (int i = 0; i < NPC_MAX; i++) {
		return &g_Npc[i];
	}
}